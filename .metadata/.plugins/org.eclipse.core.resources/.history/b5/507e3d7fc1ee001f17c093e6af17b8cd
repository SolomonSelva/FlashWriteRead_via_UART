/*
 * flash_store_data.c
 *
 *  Created on: Feb 19, 2025
 *      Author: solom
 */

#include "flash_store_data.h"
#include "stdint.h"
#include "stm32f7xx_it.h"

typedef uint64_t flash_datatype;
#define DATA_SIZE sizeof(flash_datatype)

void store_flash_memory(uint32_t memory_address, uint8_t *data, uint16_t data_length)
{
	uint8_t double_word_data[DATA_SIZE];
	FLASH_EraseInitTypeDef flash_erase_struct = {0};
	HAL_FLASH_Unlock();

	flash_erase_struct.TypeErase = FLASH_TYPEERASE_SECTORS;

	flash_erase_struct.Sector = FLASH_SECTOR_11;

	//flash_erase_struct.NbSectors = 1 + data_length / FLASH_SECTOR_SIZE;
	flash_erase_struct.NbSectors = 1;

	flash_erase_struct.Banks = FLASH_BANK_1;

	uint32_t error_status = 0;

	//erase the sector, this is a mandatory step
	HAL_FLASHEx_Erase(&flash_erase_struct, &error_status);
	int i = 0;

	//using while loop, convey all data to the flash memory
	while(i <= data_length)
	{
		double_word_data[i % DATA_SIZE] = data[i];
		i++;
		if (i% DATA_SIZE == 0)
		{
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, memory_address + i - DATA_SIZE,
					*((uint64_t *)double_word_data));

		}
	}

	if (i% DATA_SIZE != 0)
	{
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, memory_address + i % DATA_SIZE,
							*((flash_datatype *)double_word_data));
	}

}
